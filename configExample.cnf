featureSetCacheFile = cache_feature_set.obj
useCache = false

#path to the machine learning method tools (this is used in the XML machine learning method scripts - variable xmlMachineLearningMethods)
mlToolsPath = ../ml_tools/ 

#Feature id range for each view. 
view_1_idx_range=1-2
view_2_idx_range=3-4
view_3_idx_range=5
#its similar to:
#viewPerFeature = 1,1,2,2,3,3
#In viewPerFeature, use "0" if there is no view assigned to a determined feature

#Whether to use all feature set in the second level (together with the predictions)
withFeatSet = false

#justBaseLevel use a usual machine learning (do not do the multiview, using all features)
justBaseLevel = false

#output dir result
outputDir=result

#machine learning type (classification, regression or l2r)
mlMode = classification

#XML containing the machine learning methods scripts
xmlMachineLearningMethods = learning_methods.xml

#multiview machine learning method . Use the ml name contained in the xml file (xmlMachineLearningMethods)
mlMethod = SVM

#machine learning method per view. If not provided, it will be used the mlMethod as default. Use the ml name contained in the xml file (xmlMachineLearningMethods) 
mlMethod_view_1 = SVMLinear
mlMethod_view_2 = SVMLinear

#set the parameters per view (use * to make a gridsearch - according to the XML file) in the training and test set. Use the prefix "ml_param_view_X_train_" for the training set params for the view X and "ml_param_view_X_test_" for the test params of the view X
ml_param_view_1_train_COST = 0.5
ml_param_view_2_train_COST = 8
ml_param_view_3_train_COST = 0.5
ml_param_view_3_train_GAMA = 2

#set the parameters of the machine learning method used for the multiview - similar than the machine learning method per view
ml_param_train_COST = 2
ml_param_train_GAMA = 8




